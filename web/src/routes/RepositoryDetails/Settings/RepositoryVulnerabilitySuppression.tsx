import {
  Alert
} from '@patternfly/react-core';
import { AxiosError } from 'axios';
import { ReactNode, useState } from 'react';
import { useRecoilValue, useSetRecoilState } from 'recoil';
import { SecurityDetailsCallStates, securityDetailsCallStatesInverter } from 'src/atoms/SecurityDetailsState';
import VulnerabilitySuppressionInput from 'src/components/VulnerabilitySuppressionInput';
import { useRepositoryVulnerabilitySuppressions } from 'src/hooks/UseRepositoryVulnerabilitySuppressions';
import { addDisplayError } from 'src/resources/ErrorHandling';
import { RepositoryDetails } from 'src/resources/RepositoryResource';

export default function RepositoryVulnerabilitySuppression(props: RepositoryVulnerabilitySuppressionProps) {
  const securityDetailsCallStates = useRecoilValue(SecurityDetailsCallStates);
  const resetSecurityDetailsCalls = useSetRecoilState(securityDetailsCallStatesInverter(securityDetailsCallStates));
  const [alerts, setAlerts] = useState<ReactNode[]>([]);

  const {
    setSuppressions: updateVulnerabilitySuppressions,
    loading: loadingSetSuppressions,
    error: _,
  } = useRepositoryVulnerabilitySuppressions({
    org: props.org,
    repo: props.repo,
    onSuccess: (_) => {
      setAlerts(prevAlerts => {
        return [...prevAlerts,
        <Alert key="alert" variant="success" title="Successfully updated vulnerability suppressions" isInline={true} timeout={2000} />
        ]
      });

      resetSecurityDetailsCalls([true]);
    },
    onError: (error: AxiosError) => {
      setAlerts(prevAlerts => {
        return [...prevAlerts,
        <Alert key="alert" variant="danger" title="Error">
          {addDisplayError("Unable to update vulnerability suppressions", error)}
        </Alert>
        ]
      });
    },
  }
  );

  return (
    <VulnerabilitySuppressionInput
      suppressedVulnerabilities={props.repoDetails.suppressed_vulnerabilities ? props.repoDetails.suppressed_vulnerabilities : []}
      mutator={updateVulnerabilitySuppressions}
      loading={loadingSetSuppressions}
      alerts={alerts}
      setAlerts={setAlerts}
      helperText='Specify vulnerability identifiers to suppress for any image in this repository. For example "CVE-2021-44228". They will match any vulnerability identifier that contains the specified string. You can also paste space or comma separated values. Any suppression defined here will be applied to all images in this repository.'
    />
  );

}

interface RepositoryVulnerabilitySuppressionProps {
  org: string;
  repo: string;
  repoDetails: RepositoryDetails;
}
